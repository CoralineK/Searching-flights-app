{"version":3,"sources":["0_images/imgs/globe3.png","Header/Header.js","Earth/Globe.js","Earth/Loader.js","Earth/Earth.js","Weather/Weather.js","Earth/ChosenCities.js","searchComponents/CityInput.js","searchComponents/SearchingCities.js","App.js","index.js"],"names":["module","exports","Header","className","href","style","width","height","icon","faChevronCircleDown","Globe","onLoaded","location","fromCity","toCity","useState","texture","setTexture","clouds","setClouds","locFrom","map","e","parseFloat","locTo","dLat","Math","abs","dLong","numPoints","partOfLat","round","partOfLong","arr1","arr2","points","i","push","_","id","color","coordinates","value","arrCities","split","markersOnGlobe","from","splice","toString","to","useEffect","onGlobeTextureLoaded","onGlobeCloudsTextureLoaded","globeBackgroundTexture","globeTexture","options","focusDistanceRadiusScale","enableCameraZoom","ambientLightIntensity","ambientLightColor","markerTooltipRenderer","marker","focus","onMouseOverMarker","markerObject","event","markers","Loader","faCompass","Earth","loader","setLoader","Weather","weatherTo","setWeatherTo","weather","a","TO_URL","secret","key","fetch","response","json","data","currentWeather","undefined","details","city","iconID","temprature","tempratureFeels","wind","main","temp","pressure","speed","alt","src","ChosenCities","onBack","onClick","type","CityInput","error","autocomplete","select","props","slice","airport","country","name","iata","airports","aviation","getAllData","getAirportsByCityName","trim","charAt","toUpperCase","toLowerCase","filter","startsWith","SearchingCities","chosen","setChosen","errorFrom","setErrorFrom","errorTo","setErrorTo","setCity","long","lat","locationFrom","setLocationFrom","locationTo","setLocationTo","submit","preventDefault","onSubmit","placeholder","onChange","target","longitude","latitude","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd6e1949.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/globe3.93f09e7e.png\";","import React from 'react';\r\nimport './header.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronCircleDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Header = () => {\r\n  const iconStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h1 className=\"title\">\r\n        <p>comfortable</p>\r\n        <p className=\"title__accent\">traveling</p>\r\n        <p>fly wherever you want</p>\r\n      </h1>\r\n\r\n      <div className=\"start\">\r\n        <p>Let's start!</p>\r\n        <a href=\"#search\">\r\n          <div className=\"arrow\">\r\n            <FontAwesomeIcon style={iconStyle} icon={faChevronCircleDown} />\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ReactGlobe from 'react-globe';\r\nimport './style/chosen.scss';\r\nimport globeTexture from '../0_images/imgs/globe3.png';\r\n\r\nconst Globe = ({ onLoaded, location, fromCity, toCity }) => {\r\n  const [texture, setTexture] = useState(true);\r\n  const [clouds, setClouds] = useState(true);\r\n\r\n  const locFrom = location[0].map((e) => parseFloat(e));\r\n  const locTo = location[1].map((e) => parseFloat(e));\r\n\r\n  // Drawing path\r\n  const dLat = Math.abs(locFrom[0] - locTo[0]);\r\n  const dLong = Math.abs(locFrom[1] - locTo[1]);\r\n\r\n  let numPoints = 0;\r\n  if (dLong > dLat) {\r\n    numPoints = Math.round(dLong) / 2;\r\n  } else {\r\n    numPoints = Math.round(dLat) / 2;\r\n  }\r\n\r\n  const partOfLat = dLat / numPoints;\r\n  const partOfLong = dLong / numPoints;\r\n  const arr1 = [];\r\n  const arr2 = [];\r\n  const points = [];\r\n\r\n  for (let i = partOfLat; i < dLat; i = i + partOfLat) {\r\n    locFrom[0] > locTo[0]\r\n      ? arr1.push(locFrom[0] - i)\r\n      : arr1.push(locFrom[0] + i);\r\n  }\r\n  for (let i = partOfLong; i < dLong; i = i + partOfLong) {\r\n    locFrom[1] > locTo[1]\r\n      ? arr2.push(locFrom[1] - i)\r\n      : arr2.push(locFrom[1] + i);\r\n  }\r\n\r\n  if (arr1 < arr2) {\r\n    arr1.map((_, i) =>\r\n      points.push({\r\n        id: `${i}`,\r\n        color: 'black',\r\n        coordinates: [arr1[i], arr2[i]],\r\n        value: 1,\r\n      })\r\n    );\r\n  } else {\r\n    arr2.map((_, i) =>\r\n      points.push({\r\n        id: `${i}`,\r\n        color: 'black',\r\n        coordinates: [arr1[i], arr2[i]],\r\n        value: 1,\r\n      })\r\n    );\r\n  }\r\n  // end\r\n\r\n  const arrCities = [fromCity.split(','), toCity.split(',')];\r\n\r\n  const markersOnGlobe = {\r\n    from: arrCities[0].splice(0, 2).toString(','),\r\n    to: arrCities[1].splice(0, 2).toString(','),\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!texture && !clouds) {\r\n      onLoaded();\r\n    }\r\n  }, [texture, clouds, onLoaded]);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const markerCallback = (marker, markerObject, event) => {};\r\n\r\n  return (\r\n    <ReactGlobe\r\n      width=\"600px\"\r\n      height=\"600px\"\r\n      onGlobeTextureLoaded={() => setTexture(false)}\r\n      onGlobeCloudsTextureLoaded={() => setClouds(false)}\r\n      globeBackgroundTexture=\"none\"\r\n      globeTexture={globeTexture}\r\n      options={{\r\n        focusDistanceRadiusScale: 3,\r\n        enableCameraZoom: false,\r\n        ambientLightIntensity: 0.6,\r\n        ambientLightColor: '#dbcca0',\r\n        markerTooltipRenderer: (marker) => {\r\n          if (\r\n            locFrom[0] === marker.coordinates[0] &&\r\n            locFrom[1] === marker.coordinates[1]\r\n          ) {\r\n            return markersOnGlobe.from;\r\n          } else if (\r\n            locTo[0] === marker.coordinates[0] &&\r\n            locTo[1] === marker.coordinates[1]\r\n          ) {\r\n            return markersOnGlobe.to;\r\n          }\r\n        },\r\n      }}\r\n      focus={locTo}\r\n      onMouseOverMarker={markerCallback}\r\n      markers={[\r\n        {\r\n          id: 'city1',\r\n          color: 'red',\r\n          coordinates: locFrom,\r\n          value: 20,\r\n        },\r\n        {\r\n          id: 'city2',\r\n          color: 'red',\r\n          coordinates: locTo,\r\n          value: 20,\r\n        },\r\n        ...points,\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Globe;\r\n","import React from 'react';\r\nimport './style/loader.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCompass } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Loader = () => {\r\n  const compassStyle = {\r\n    color: '#116466',\r\n    width: '100px',\r\n    height: '100px',\r\n  };\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loading-spinner\">\r\n        <FontAwesomeIcon style={compassStyle} icon={faCompass} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState } from 'react';\r\nimport './style/chosen.scss';\r\nimport Globe from './Globe';\r\nimport Loader from './Loader';\r\n\r\nconst Earth = ({ location, fromCity, toCity, }) => {\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  return (\r\n    <div className=\"earth-container\">\r\n      <Globe\r\n        onLoaded={() => setLoader(false)}\r\n        location={location}\r\n        fromCity={fromCity}\r\n        toCity={toCity}\r\n      />\r\n      {loader && <Loader />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Earth;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './weather.scss';\r\nimport secret from './secret.json';\r\n\r\nconst Weather = ({ location, toCity }) => {\r\n  const [weatherTo, setWeatherTo] = useState();\r\n  const weather = toCity.split(', ')[0];\r\n\r\n  useEffect(() => {\r\n    const currentWeather = async () => {\r\n      const TO_URL = `https://api.openweathermap.org/data/2.5/weather?lat=${Math.round(\r\n        location[1][0]\r\n      )}&lon=${Math.round(location[1][1])}&appid=${secret.key}`;\r\n      const response = await fetch(TO_URL);\r\n      const data = await response.json();\r\n      setWeatherTo(data);\r\n    };\r\n    currentWeather();\r\n  }, [location]);\r\n\r\n  if (weatherTo !== undefined) {\r\n    let details = {\r\n      city: '',\r\n      iconID: '',\r\n      temprature: 0,\r\n      tempratureFeels: 0,\r\n      wind: 0,\r\n    };\r\n\r\n    details.city = '';\r\n    details.iconID = weatherTo.weather[0].icon;\r\n    details.main = weatherTo.weather[0].main;\r\n    details.temprature = Math.round(weatherTo.main.temp - 272.15);\r\n    details.pressure = weatherTo.main.pressure;\r\n    details.wind = weatherTo.wind.speed;\r\n\r\n    return (\r\n      <div className=\"weather\">\r\n        <h1>Weather in {weather}</h1>\r\n        <div className=\"weather__details\">\r\n          <p>{details.main}</p>\r\n          <div className=\"weather__icon\">\r\n            <img\r\n              alt=\"icon\"\r\n              src={`http://openweathermap.org/img/wn/${details.iconID}@2x.png`}\r\n            />\r\n          </div>\r\n          <p>Temprature: {details.temprature} &deg;C</p>\r\n          <p>Pressure: {details.pressure} hPa</p>\r\n          <p>Wind: {details.wind} m/s</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Weather;\r\n","import React from 'react';\r\nimport './style/chosen.scss';\r\nimport Earth from './Earth';\r\nimport Weather from '../Weather/Weather';\r\n\r\nconst ChosenCities = ({ fromCity, toCity, onBack, location }) => {\r\n  return (\r\n    <>\r\n      <div className=\"search-container\">\r\n        <div className=\"search-container__inside\">\r\n          <div className=\"chosen\">\r\n            <div className=\"chosen__describ\">\r\n              <p>FROM: </p>\r\n              <div>{fromCity}</div>\r\n            </div>\r\n            <div className=\"chosen__describ\">\r\n              <p>TO: </p>\r\n              <div>{toCity}</div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <input\r\n              onClick={onBack}\r\n              className=\"confirm\"\r\n              type=\"button\"\r\n              value=\"Change cities\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"globe-container\">\r\n          <Earth location={location} fromCity={fromCity} toCity={toCity} />\r\n          <Weather location={location} toCity={toCity} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChosenCities;\r\n","import React from 'react';\r\nimport './style/searchComponents.scss';\r\n\r\nconst CityInput = ({ error, autocomplete, select, ...props }) => {\r\n  return (\r\n    <div className=\"choice__input-wrapper\">\r\n      <input\r\n        className={`choice__city-input ${error ? 'input-error' : ''}`}\r\n        type=\"text\"\r\n        {...props}\r\n      />\r\n      {autocomplete && (\r\n        <div className=\"choice__autocomplete\">\r\n          {autocomplete.slice(0, 10).map((airport, i) => (\r\n            <div className=\"location\" key={i} onClick={() => select(airport)}>\r\n              {airport.city}, {airport.country}, {airport.name} ({airport.iata})\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CityInput;\r\n","import React, { useState } from 'react';\r\nimport aviation from 'simple-aviation-api';\r\nimport './style/searchComponents.scss';\r\nimport ChosenCities from '../Earth/ChosenCities';\r\nimport CityInput from './CityInput';\r\n\r\nconst { airports } = aviation.getAllData();\r\n\r\nconst getAirportsByCityName = (name) => {\r\n  name = name.trim();\r\n  name = name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\r\n  return airports.filter((airport) => name && airport.city.startsWith(name));\r\n};\r\n\r\nconst SearchingCities = () => {\r\n  const [chosen, setChosen] = useState(false);\r\n  const [errorFrom, setErrorFrom] = useState(false);\r\n  const [errorTo, setErrorTo] = useState(false);\r\n  const [city, setCity] = useState({ from: '', to: '' });\r\n  const [locationFrom, setLocationFrom] = useState({ long: 0, lat: 0 });\r\n  const [locationTo, setLocationTo] = useState({ long: 0, lat: 0 });\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (city.from !== '' && city.to !== '') {\r\n      setChosen(true);\r\n    } else {\r\n      city.from === '' && setErrorFrom(true);\r\n      city.to === '' && setErrorTo(true);\r\n    }\r\n  };\r\n\r\n  const onBack = () => {\r\n    setChosen(false);\r\n    setErrorFrom(false);\r\n    setErrorTo(false);\r\n  };\r\n\r\n  const handleFromClick = (airport) => {\r\n    setCity({\r\n      ...city,\r\n      from: `${airport.city}, ${airport.country}, ${airport.name} (${airport.iata})`,\r\n    });\r\n    setLocationFrom({ long: airport.longitude, lat: airport.latitude });\r\n  };\r\n\r\n  const handleToClick = (airport) => {\r\n    setCity({\r\n      ...city,\r\n      to: `${airport.city}, ${airport.country}, ${airport.name} (${airport.iata})`,\r\n    });\r\n    setLocationTo({ long: airport.longitude, lat: airport.latitude });\r\n  };\r\n\r\n  if (chosen) {\r\n    return (\r\n      <ChosenCities\r\n        fromCity={city.from}\r\n        toCity={city.to}\r\n        onBack={onBack}\r\n        location={[\r\n          [locationFrom.lat, locationFrom.long],\r\n          [locationTo.lat, locationTo.long],\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div id=\"search\" className=\"choice\" onSubmit={submit}>\r\n      <p>From where do you start your advnture?</p>\r\n      <CityInput\r\n        placeholder=\"Type name of city\"\r\n        value={city.from}\r\n        onChange={(e) => setCity({ ...city, from: e.target.value })}\r\n        error={errorFrom}\r\n        autocomplete={getAirportsByCityName(city.from)}\r\n        select={handleFromClick}\r\n      />\r\n\r\n      <p>Where do you want to go?</p>\r\n      <CityInput\r\n        placeholder=\"Type name of city\"\r\n        value={city.to}\r\n        onChange={(e) => setCity({ ...city, to: e.target.value })}\r\n        error={errorTo}\r\n        autocomplete={getAirportsByCityName(city.to)}\r\n        select={handleToClick}\r\n      />\r\n      <input\r\n        onClick={submit}\r\n        className=\"choice__confirm\"\r\n        type=\"button\"\r\n        value=\"Choose\"\r\n      />\r\n      {errorFrom || errorTo ? <div className=\"error\">Enter data!</div> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchingCities;\r\n","import React from 'react';\r\nimport './style/app.scss';\r\nimport Header from './Header/Header';\r\n\r\nimport SearchingCities from './searchComponents/SearchingCities';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <SearchingCities />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/reset.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}